
powerWindow_LightCOntrol.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000055c  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000708  08000710  00010710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000708  08000708  00010710  2**0
                  CONTENTS
  4 .ARM          00000000  08000708  08000708  00010710  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000708  08000710  00010710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000708  08000708  00010708  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800070c  0800070c  0001070c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000710  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000710  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010710  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007d7  00000000  00000000  00010740  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000217  00000000  00000000  00010f17  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00011130  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  000111e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000009e9  00000000  00000000  00011278  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a47  00000000  00000000  00011c61  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00005611  00000000  00000000  000126a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017cb9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00017d34  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	080006f0 	.word	0x080006f0

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	080006f0 	.word	0x080006f0

080001ec <GPIO_PCLK_Control>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_PCLK_Control(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
 80001f4:	460b      	mov	r3, r1
 80001f6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f8:	78fb      	ldrb	r3, [r7, #3]
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	d162      	bne.n	80002c4 <GPIO_PCLK_Control+0xd8>
	{
		if(pGPIOx == GPIOA)
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	4a66      	ldr	r2, [pc, #408]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000202:	4293      	cmp	r3, r2
 8000204:	d106      	bne.n	8000214 <GPIO_PCLK_Control+0x28>
			GPIOA_PCLK_EN();
 8000206:	4b66      	ldr	r3, [pc, #408]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000208:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020a:	4a65      	ldr	r2, [pc, #404]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800020c:	f043 0301 	orr.w	r3, r3, #1
 8000210:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
			GPIOH_PCLK_DI();
		else if(pGPIOx == GPIOI)
				GPIOI_PCLK_DI();
	}
}
 8000212:	e0bc      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOB)
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	4a63      	ldr	r2, [pc, #396]	; (80003a4 <GPIO_PCLK_Control+0x1b8>)
 8000218:	4293      	cmp	r3, r2
 800021a:	d106      	bne.n	800022a <GPIO_PCLK_Control+0x3e>
			GPIOB_PCLK_EN();
 800021c:	4b60      	ldr	r3, [pc, #384]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800021e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000220:	4a5f      	ldr	r2, [pc, #380]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000222:	f043 0302 	orr.w	r3, r3, #2
 8000226:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000228:	e0b1      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOC)
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	4a5e      	ldr	r2, [pc, #376]	; (80003a8 <GPIO_PCLK_Control+0x1bc>)
 800022e:	4293      	cmp	r3, r2
 8000230:	d106      	bne.n	8000240 <GPIO_PCLK_Control+0x54>
			GPIOC_PCLK_EN();
 8000232:	4b5b      	ldr	r3, [pc, #364]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000236:	4a5a      	ldr	r2, [pc, #360]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000238:	f043 0304 	orr.w	r3, r3, #4
 800023c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023e:	e0a6      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOD)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	4a5a      	ldr	r2, [pc, #360]	; (80003ac <GPIO_PCLK_Control+0x1c0>)
 8000244:	4293      	cmp	r3, r2
 8000246:	d106      	bne.n	8000256 <GPIO_PCLK_Control+0x6a>
			GPIOD_PCLK_EN();
 8000248:	4b55      	ldr	r3, [pc, #340]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800024a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024c:	4a54      	ldr	r2, [pc, #336]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800024e:	f043 0308 	orr.w	r3, r3, #8
 8000252:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000254:	e09b      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOE)
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	4a55      	ldr	r2, [pc, #340]	; (80003b0 <GPIO_PCLK_Control+0x1c4>)
 800025a:	4293      	cmp	r3, r2
 800025c:	d106      	bne.n	800026c <GPIO_PCLK_Control+0x80>
			GPIOE_PCLK_EN();
 800025e:	4b50      	ldr	r3, [pc, #320]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000260:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000262:	4a4f      	ldr	r2, [pc, #316]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000264:	f043 0310 	orr.w	r3, r3, #16
 8000268:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026a:	e090      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOF)
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	4a51      	ldr	r2, [pc, #324]	; (80003b4 <GPIO_PCLK_Control+0x1c8>)
 8000270:	4293      	cmp	r3, r2
 8000272:	d106      	bne.n	8000282 <GPIO_PCLK_Control+0x96>
			GPIOF_PCLK_EN();
 8000274:	4b4a      	ldr	r3, [pc, #296]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000276:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000278:	4a49      	ldr	r2, [pc, #292]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800027a:	f043 0320 	orr.w	r3, r3, #32
 800027e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000280:	e085      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOG)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a4c      	ldr	r2, [pc, #304]	; (80003b8 <GPIO_PCLK_Control+0x1cc>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d106      	bne.n	8000298 <GPIO_PCLK_Control+0xac>
			GPIOG_PCLK_EN();
 800028a:	4b45      	ldr	r3, [pc, #276]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800028c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028e:	4a44      	ldr	r2, [pc, #272]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000290:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000294:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000296:	e07a      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOH)
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a48      	ldr	r2, [pc, #288]	; (80003bc <GPIO_PCLK_Control+0x1d0>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d106      	bne.n	80002ae <GPIO_PCLK_Control+0xc2>
			GPIOH_PCLK_EN();
 80002a0:	4b3f      	ldr	r3, [pc, #252]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	4a3e      	ldr	r2, [pc, #248]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ac:	e06f      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOI)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	4a43      	ldr	r2, [pc, #268]	; (80003c0 <GPIO_PCLK_Control+0x1d4>)
 80002b2:	4293      	cmp	r3, r2
 80002b4:	d16b      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
			GPIOI_PCLK_EN();
 80002b6:	4b3a      	ldr	r3, [pc, #232]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ba:	4a39      	ldr	r2, [pc, #228]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c2:	e064      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
	else if(EnorDi == DISABLE)
 80002c4:	78fb      	ldrb	r3, [r7, #3]
 80002c6:	2b00      	cmp	r3, #0
 80002c8:	d161      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
		if(pGPIOx == GPIOA)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a33      	ldr	r2, [pc, #204]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PCLK_Control+0xf4>
			GPIOA_PCLK_DI();
 80002d2:	4b33      	ldr	r3, [pc, #204]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a32      	ldr	r2, [pc, #200]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002d8:	f023 0301 	bic.w	r3, r3, #1
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002de:	e056      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOB)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a30      	ldr	r2, [pc, #192]	; (80003a4 <GPIO_PCLK_Control+0x1b8>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PCLK_Control+0x10a>
			GPIOB_PCLK_DI();
 80002e8:	4b2d      	ldr	r3, [pc, #180]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a2c      	ldr	r2, [pc, #176]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002ee:	f023 0302 	bic.w	r3, r3, #2
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f4:	e04b      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOC)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a2b      	ldr	r2, [pc, #172]	; (80003a8 <GPIO_PCLK_Control+0x1bc>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PCLK_Control+0x120>
			GPIOC_PCLK_DI();
 80002fe:	4b28      	ldr	r3, [pc, #160]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a27      	ldr	r2, [pc, #156]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000304:	f023 0304 	bic.w	r3, r3, #4
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e040      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOD)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a27      	ldr	r2, [pc, #156]	; (80003ac <GPIO_PCLK_Control+0x1c0>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PCLK_Control+0x136>
			GPIOD_PCLK_DI();
 8000314:	4b22      	ldr	r3, [pc, #136]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a21      	ldr	r2, [pc, #132]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800031a:	f023 0308 	bic.w	r3, r3, #8
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e035      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOE)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a22      	ldr	r2, [pc, #136]	; (80003b0 <GPIO_PCLK_Control+0x1c4>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PCLK_Control+0x14c>
			GPIOE_PCLK_DI();
 800032a:	4b1d      	ldr	r3, [pc, #116]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a1c      	ldr	r2, [pc, #112]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000330:	f023 0310 	bic.w	r3, r3, #16
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e02a      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOF)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a1e      	ldr	r2, [pc, #120]	; (80003b4 <GPIO_PCLK_Control+0x1c8>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_PCLK_Control+0x162>
			GPIOF_PCLK_DI();
 8000340:	4b17      	ldr	r3, [pc, #92]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a16      	ldr	r2, [pc, #88]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000346:	f023 0320 	bic.w	r3, r3, #32
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e01f      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOG)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a19      	ldr	r2, [pc, #100]	; (80003b8 <GPIO_PCLK_Control+0x1cc>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_PCLK_Control+0x178>
			GPIOG_PCLK_DI();
 8000356:	4b12      	ldr	r3, [pc, #72]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a11      	ldr	r2, [pc, #68]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800035c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e014      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOH)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a15      	ldr	r2, [pc, #84]	; (80003bc <GPIO_PCLK_Control+0x1d0>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <GPIO_PCLK_Control+0x18e>
			GPIOH_PCLK_DI();
 800036c:	4b0c      	ldr	r3, [pc, #48]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a0b      	ldr	r2, [pc, #44]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000372:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e009      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOI)
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a10      	ldr	r2, [pc, #64]	; (80003c0 <GPIO_PCLK_Control+0x1d4>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d105      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
				GPIOI_PCLK_DI();
 8000382:	4b07      	ldr	r3, [pc, #28]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a06      	ldr	r2, [pc, #24]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000388:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	bf00      	nop
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr
 800039a:	bf00      	nop
 800039c:	40020000 	.word	0x40020000
 80003a0:	40023800 	.word	0x40023800
 80003a4:	40020400 	.word	0x40020400
 80003a8:	40020800 	.word	0x40020800
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	40021000 	.word	0x40021000
 80003b4:	40021400 	.word	0x40021400
 80003b8:	40021800 	.word	0x40021800
 80003bc:	40021c00 	.word	0x40021c00
 80003c0:	40022000 	.word	0x40022000

080003c4 <GPIO_Init>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003c4:	b480      	push	{r7}
 80003c6:	b085      	sub	sp, #20
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
	//1. GPIO Mode configuration

	uint32_t temp = 0;
 80003cc:	2300      	movs	r3, #0
 80003ce:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	d81e      	bhi.n	8000416 <GPIO_Init+0x52>
	{
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << ( 2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	461a      	mov	r2, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	005b      	lsls	r3, r3, #1
 80003e4:	fa02 f303 	lsl.w	r3, r2, r3
 80003e8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	791b      	ldrb	r3, [r3, #4]
 80003f4:	4619      	mov	r1, r3
 80003f6:	2303      	movs	r3, #3
 80003f8:	408b      	lsls	r3, r1
 80003fa:	43db      	mvns	r3, r3
 80003fc:	4619      	mov	r1, r3
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	400a      	ands	r2, r1
 8000404:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	6819      	ldr	r1, [r3, #0]
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	68fa      	ldr	r2, [r7, #12]
 8000412:	430a      	orrs	r2, r1
 8000414:	601a      	str	r2, [r3, #0]
		//interrupt mode setup
	}

	//2 . GPIO Speed Configuration

	temp = 0;
 8000416:	2300      	movs	r3, #0
 8000418:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	799b      	ldrb	r3, [r3, #6]
 800041e:	461a      	mov	r2, r3
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	791b      	ldrb	r3, [r3, #4]
 8000424:	005b      	lsls	r3, r3, #1
 8000426:	fa02 f303 	lsl.w	r3, r2, r3
 800042a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	689a      	ldr	r2, [r3, #8]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	791b      	ldrb	r3, [r3, #4]
 8000436:	4619      	mov	r1, r3
 8000438:	2303      	movs	r3, #3
 800043a:	408b      	lsls	r3, r1
 800043c:	43db      	mvns	r3, r3
 800043e:	4619      	mov	r1, r3
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	400a      	ands	r2, r1
 8000446:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	6899      	ldr	r1, [r3, #8]
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	68fa      	ldr	r2, [r7, #12]
 8000454:	430a      	orrs	r2, r1
 8000456:	609a      	str	r2, [r3, #8]



	//3. GPIO PullUp and PullDown configuration

	temp = 0;
 8000458:	2300      	movs	r3, #0
 800045a:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	79db      	ldrb	r3, [r3, #7]
 8000460:	461a      	mov	r2, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	791b      	ldrb	r3, [r3, #4]
 8000466:	005b      	lsls	r3, r3, #1
 8000468:	fa02 f303 	lsl.w	r3, r2, r3
 800046c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	68da      	ldr	r2, [r3, #12]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	791b      	ldrb	r3, [r3, #4]
 8000478:	4619      	mov	r1, r3
 800047a:	2303      	movs	r3, #3
 800047c:	408b      	lsls	r3, r1
 800047e:	43db      	mvns	r3, r3
 8000480:	4619      	mov	r1, r3
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	400a      	ands	r2, r1
 8000488:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	68d9      	ldr	r1, [r3, #12]
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	68fa      	ldr	r2, [r7, #12]
 8000496:	430a      	orrs	r2, r1
 8000498:	60da      	str	r2, [r3, #12]

	//4. GPIO Output Type configuration

	temp = 0;
 800049a:	2300      	movs	r3, #0
 800049c:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	7a1b      	ldrb	r3, [r3, #8]
 80004a2:	461a      	mov	r2, r3
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	005b      	lsls	r3, r3, #1
 80004aa:	fa02 f303 	lsl.w	r3, r2, r3
 80004ae:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	685a      	ldr	r2, [r3, #4]
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	791b      	ldrb	r3, [r3, #4]
 80004ba:	4619      	mov	r1, r3
 80004bc:	2301      	movs	r3, #1
 80004be:	408b      	lsls	r3, r1
 80004c0:	43db      	mvns	r3, r3
 80004c2:	4619      	mov	r1, r3
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	400a      	ands	r2, r1
 80004ca:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	6859      	ldr	r1, [r3, #4]
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	68fa      	ldr	r2, [r7, #12]
 80004d8:	430a      	orrs	r2, r1
 80004da:	605a      	str	r2, [r3, #4]

	//5. GPIO Alternate function configuration

	temp = 0;
 80004dc:	2300      	movs	r3, #0
 80004de:	60fb      	str	r3, [r7, #12]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	795b      	ldrb	r3, [r3, #5]
 80004e4:	2b02      	cmp	r3, #2
 80004e6:	d131      	bne.n	800054c <GPIO_Init+0x188>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	791b      	ldrb	r3, [r3, #4]
 80004ec:	08db      	lsrs	r3, r3, #3
 80004ee:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	f003 0307 	and.w	r3, r3, #7
 80004f8:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2 ));
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	7afa      	ldrb	r2, [r7, #11]
 8000500:	3208      	adds	r2, #8
 8000502:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000506:	7abb      	ldrb	r3, [r7, #10]
 8000508:	009b      	lsls	r3, r3, #2
 800050a:	220f      	movs	r2, #15
 800050c:	fa02 f303 	lsl.w	r3, r2, r3
 8000510:	43db      	mvns	r3, r3
 8000512:	4618      	mov	r0, r3
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	7afa      	ldrb	r2, [r7, #11]
 800051a:	4001      	ands	r1, r0
 800051c:	3208      	adds	r2, #8
 800051e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2 ));
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	7afa      	ldrb	r2, [r7, #11]
 8000528:	3208      	adds	r2, #8
 800052a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	7a5b      	ldrb	r3, [r3, #9]
 8000532:	461a      	mov	r2, r3
 8000534:	7abb      	ldrb	r3, [r7, #10]
 8000536:	009b      	lsls	r3, r3, #2
 8000538:	fa02 f303 	lsl.w	r3, r2, r3
 800053c:	4618      	mov	r0, r3
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	7afa      	ldrb	r2, [r7, #11]
 8000544:	4301      	orrs	r1, r0
 8000546:	3208      	adds	r2, #8
 8000548:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800054c:	bf00      	nop
 800054e:	3714      	adds	r7, #20
 8000550:	46bd      	mov	sp, r7
 8000552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000556:	4770      	bx	lr

08000558 <GPIO_ReadFromInputPin>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000558:	b480      	push	{r7}
 800055a:	b085      	sub	sp, #20
 800055c:	af00      	add	r7, sp, #0
 800055e:	6078      	str	r0, [r7, #4]
 8000560:	460b      	mov	r3, r1
 8000562:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber ) & 0x00000001 );
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	691a      	ldr	r2, [r3, #16]
 8000568:	78fb      	ldrb	r3, [r7, #3]
 800056a:	fa22 f303 	lsr.w	r3, r2, r3
 800056e:	b2db      	uxtb	r3, r3
 8000570:	f003 0301 	and.w	r3, r3, #1
 8000574:	73fb      	strb	r3, [r7, #15]
	return value;
 8000576:	7bfb      	ldrb	r3, [r7, #15]

}
 8000578:	4618      	mov	r0, r3
 800057a:	3714      	adds	r7, #20
 800057c:	46bd      	mov	sp, r7
 800057e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000582:	4770      	bx	lr

08000584 <GPIO_ToggleOutputPin>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000584:	b480      	push	{r7}
 8000586:	b083      	sub	sp, #12
 8000588:	af00      	add	r7, sp, #0
 800058a:	6078      	str	r0, [r7, #4]
 800058c:	460b      	mov	r3, r1
 800058e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber);
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	695b      	ldr	r3, [r3, #20]
 8000594:	78fa      	ldrb	r2, [r7, #3]
 8000596:	2101      	movs	r1, #1
 8000598:	fa01 f202 	lsl.w	r2, r1, r2
 800059c:	405a      	eors	r2, r3
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	615a      	str	r2, [r3, #20]
}
 80005a2:	bf00      	nop
 80005a4:	370c      	adds	r7, #12
 80005a6:	46bd      	mov	sp, r7
 80005a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ac:	4770      	bx	lr
	...

080005b0 <delay>:

#define HIGH 					1
#define BTN_PRESSED 			HIGH

void delay(void)
{
 80005b0:	b480      	push	{r7}
 80005b2:	b083      	sub	sp, #12
 80005b4:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80005b6:	2300      	movs	r3, #0
 80005b8:	607b      	str	r3, [r7, #4]
 80005ba:	e002      	b.n	80005c2 <delay+0x12>
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	3301      	adds	r3, #1
 80005c0:	607b      	str	r3, [r7, #4]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	4a04      	ldr	r2, [pc, #16]	; (80005d8 <delay+0x28>)
 80005c6:	4293      	cmp	r3, r2
 80005c8:	d9f8      	bls.n	80005bc <delay+0xc>
}
 80005ca:	bf00      	nop
 80005cc:	370c      	adds	r7, #12
 80005ce:	46bd      	mov	sp, r7
 80005d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d4:	4770      	bx	lr
 80005d6:	bf00      	nop
 80005d8:	0007a11f 	.word	0x0007a11f

080005dc <main>:

int main()
{
 80005dc:	b580      	push	{r7, lr}
 80005de:	b086      	sub	sp, #24
 80005e0:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioBtn;
	GpioLed.pGPIOx = GPIOG;
 80005e2:	4b1a      	ldr	r3, [pc, #104]	; (800064c <main+0x70>)
 80005e4:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber 		= GPIO_PIN_NO_13;
 80005e6:	230d      	movs	r3, #13
 80005e8:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode 		= GPIO_MODE_OUTPUT;
 80005ea:	2301      	movs	r3, #1
 80005ec:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed		= GPIO_SPEED_FAST;
 80005ee:	2302      	movs	r3, #2
 80005f0:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType 		= GPIO_OUT_TYPE_OD;
 80005f2:	2301      	movs	r3, #1
 80005f4:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl 	= GPIO_NO_PUPD;
 80005f6:	2300      	movs	r3, #0
 80005f8:	74fb      	strb	r3, [r7, #19]

	GPIO_PCLK_Control(GPIOG, ENABLE);
 80005fa:	2101      	movs	r1, #1
 80005fc:	4813      	ldr	r0, [pc, #76]	; (800064c <main+0x70>)
 80005fe:	f7ff fdf5 	bl	80001ec <GPIO_PCLK_Control>

	GPIO_Init(&GpioLed);
 8000602:	f107 030c 	add.w	r3, r7, #12
 8000606:	4618      	mov	r0, r3
 8000608:	f7ff fedc 	bl	80003c4 <GPIO_Init>

	GpioBtn.pGPIOx = GPIOA;
 800060c:	4b10      	ldr	r3, [pc, #64]	; (8000650 <main+0x74>)
 800060e:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber 		= GPIO_PIN_NO_0;
 8000610:	2300      	movs	r3, #0
 8000612:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode 		= GPIO_MODE_INPUT;
 8000614:	2300      	movs	r3, #0
 8000616:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed		= GPIO_SPEED_FAST;
 8000618:	2302      	movs	r3, #2
 800061a:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl 	= GPIO_PIN_PD;
 800061c:	2302      	movs	r3, #2
 800061e:	71fb      	strb	r3, [r7, #7]

	GPIO_PCLK_Control(GPIOA, ENABLE);
 8000620:	2101      	movs	r1, #1
 8000622:	480b      	ldr	r0, [pc, #44]	; (8000650 <main+0x74>)
 8000624:	f7ff fde2 	bl	80001ec <GPIO_PCLK_Control>

	GPIO_Init(&GpioBtn);
 8000628:	463b      	mov	r3, r7
 800062a:	4618      	mov	r0, r3
 800062c:	f7ff feca 	bl	80003c4 <GPIO_Init>

	while(1)
	{
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED)
 8000630:	2100      	movs	r1, #0
 8000632:	4807      	ldr	r0, [pc, #28]	; (8000650 <main+0x74>)
 8000634:	f7ff ff90 	bl	8000558 <GPIO_ReadFromInputPin>
 8000638:	4603      	mov	r3, r0
 800063a:	2b01      	cmp	r3, #1
 800063c:	d1f8      	bne.n	8000630 <main+0x54>
		{
			delay();
 800063e:	f7ff ffb7 	bl	80005b0 <delay>
			GPIO_ToggleOutputPin(GPIOG, GPIO_PIN_NO_13);
 8000642:	210d      	movs	r1, #13
 8000644:	4801      	ldr	r0, [pc, #4]	; (800064c <main+0x70>)
 8000646:	f7ff ff9d 	bl	8000584 <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) == BTN_PRESSED)
 800064a:	e7f1      	b.n	8000630 <main+0x54>
 800064c:	40021800 	.word	0x40021800
 8000650:	40020000 	.word	0x40020000

08000654 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000654:	480d      	ldr	r0, [pc, #52]	; (800068c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000656:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000658:	480d      	ldr	r0, [pc, #52]	; (8000690 <LoopForever+0x6>)
  ldr r1, =_edata
 800065a:	490e      	ldr	r1, [pc, #56]	; (8000694 <LoopForever+0xa>)
  ldr r2, =_sidata
 800065c:	4a0e      	ldr	r2, [pc, #56]	; (8000698 <LoopForever+0xe>)
  movs r3, #0
 800065e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000660:	e002      	b.n	8000668 <LoopCopyDataInit>

08000662 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000662:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000664:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000666:	3304      	adds	r3, #4

08000668 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000668:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800066a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800066c:	d3f9      	bcc.n	8000662 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800066e:	4a0b      	ldr	r2, [pc, #44]	; (800069c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000670:	4c0b      	ldr	r4, [pc, #44]	; (80006a0 <LoopForever+0x16>)
  movs r3, #0
 8000672:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000674:	e001      	b.n	800067a <LoopFillZerobss>

08000676 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000676:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000678:	3204      	adds	r2, #4

0800067a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800067a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800067c:	d3fb      	bcc.n	8000676 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800067e:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000682:	f000 f811 	bl	80006a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000686:	f7ff ffa9 	bl	80005dc <main>

0800068a <LoopForever>:

LoopForever:
    b LoopForever
 800068a:	e7fe      	b.n	800068a <LoopForever>
  ldr   r0, =_estack
 800068c:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000690:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000694:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000698:	08000710 	.word	0x08000710
  ldr r2, =_sbss
 800069c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80006a0:	2000001c 	.word	0x2000001c

080006a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006a4:	e7fe      	b.n	80006a4 <ADC_IRQHandler>
	...

080006a8 <__libc_init_array>:
 80006a8:	b570      	push	{r4, r5, r6, lr}
 80006aa:	4e0d      	ldr	r6, [pc, #52]	; (80006e0 <__libc_init_array+0x38>)
 80006ac:	4c0d      	ldr	r4, [pc, #52]	; (80006e4 <__libc_init_array+0x3c>)
 80006ae:	1ba4      	subs	r4, r4, r6
 80006b0:	10a4      	asrs	r4, r4, #2
 80006b2:	2500      	movs	r5, #0
 80006b4:	42a5      	cmp	r5, r4
 80006b6:	d109      	bne.n	80006cc <__libc_init_array+0x24>
 80006b8:	4e0b      	ldr	r6, [pc, #44]	; (80006e8 <__libc_init_array+0x40>)
 80006ba:	4c0c      	ldr	r4, [pc, #48]	; (80006ec <__libc_init_array+0x44>)
 80006bc:	f000 f818 	bl	80006f0 <_init>
 80006c0:	1ba4      	subs	r4, r4, r6
 80006c2:	10a4      	asrs	r4, r4, #2
 80006c4:	2500      	movs	r5, #0
 80006c6:	42a5      	cmp	r5, r4
 80006c8:	d105      	bne.n	80006d6 <__libc_init_array+0x2e>
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006d0:	4798      	blx	r3
 80006d2:	3501      	adds	r5, #1
 80006d4:	e7ee      	b.n	80006b4 <__libc_init_array+0xc>
 80006d6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006da:	4798      	blx	r3
 80006dc:	3501      	adds	r5, #1
 80006de:	e7f2      	b.n	80006c6 <__libc_init_array+0x1e>
 80006e0:	08000708 	.word	0x08000708
 80006e4:	08000708 	.word	0x08000708
 80006e8:	08000708 	.word	0x08000708
 80006ec:	0800070c 	.word	0x0800070c

080006f0 <_init>:
 80006f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006f2:	bf00      	nop
 80006f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f6:	bc08      	pop	{r3}
 80006f8:	469e      	mov	lr, r3
 80006fa:	4770      	bx	lr

080006fc <_fini>:
 80006fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006fe:	bf00      	nop
 8000700:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000702:	bc08      	pop	{r3}
 8000704:	469e      	mov	lr, r3
 8000706:	4770      	bx	lr
