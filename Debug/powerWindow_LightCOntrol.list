
powerWindow_LightCOntrol.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008ac  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a58  08000a60  00010a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a58  08000a58  00010a60  2**0
                  CONTENTS
  4 .ARM          00000000  08000a58  08000a58  00010a60  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a58  08000a60  00010a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a58  08000a58  00010a58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a5c  08000a5c  00010a5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a60  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a60  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010a60  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001185  00000000  00000000  00010a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000032c  00000000  00000000  00011c15  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011f48  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00012010  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000b7a  00000000  00000000  000120b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000c8a  00000000  00000000  00012c2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008c06  00000000  00000000  000138b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001c4ba  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001c538  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000a40 	.word	0x08000a40

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000a40 	.word	0x08000a40

080001ec <GPIO_PCLK_Control>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_PCLK_Control(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	6078      	str	r0, [r7, #4]
 80001f4:	460b      	mov	r3, r1
 80001f6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f8:	78fb      	ldrb	r3, [r7, #3]
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	d162      	bne.n	80002c4 <GPIO_PCLK_Control+0xd8>
	{
		if(pGPIOx == GPIOA)
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	4a66      	ldr	r2, [pc, #408]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 8000202:	4293      	cmp	r3, r2
 8000204:	d106      	bne.n	8000214 <GPIO_PCLK_Control+0x28>
			GPIOA_PCLK_EN();
 8000206:	4b66      	ldr	r3, [pc, #408]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000208:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020a:	4a65      	ldr	r2, [pc, #404]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800020c:	f043 0301 	orr.w	r3, r3, #1
 8000210:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
			GPIOH_PCLK_DI();
		else if(pGPIOx == GPIOI)
				GPIOI_PCLK_DI();
	}
}
 8000212:	e0bc      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOB)
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	4a63      	ldr	r2, [pc, #396]	; (80003a4 <GPIO_PCLK_Control+0x1b8>)
 8000218:	4293      	cmp	r3, r2
 800021a:	d106      	bne.n	800022a <GPIO_PCLK_Control+0x3e>
			GPIOB_PCLK_EN();
 800021c:	4b60      	ldr	r3, [pc, #384]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800021e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000220:	4a5f      	ldr	r2, [pc, #380]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000222:	f043 0302 	orr.w	r3, r3, #2
 8000226:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000228:	e0b1      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOC)
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	4a5e      	ldr	r2, [pc, #376]	; (80003a8 <GPIO_PCLK_Control+0x1bc>)
 800022e:	4293      	cmp	r3, r2
 8000230:	d106      	bne.n	8000240 <GPIO_PCLK_Control+0x54>
			GPIOC_PCLK_EN();
 8000232:	4b5b      	ldr	r3, [pc, #364]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000236:	4a5a      	ldr	r2, [pc, #360]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000238:	f043 0304 	orr.w	r3, r3, #4
 800023c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023e:	e0a6      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOD)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	4a5a      	ldr	r2, [pc, #360]	; (80003ac <GPIO_PCLK_Control+0x1c0>)
 8000244:	4293      	cmp	r3, r2
 8000246:	d106      	bne.n	8000256 <GPIO_PCLK_Control+0x6a>
			GPIOD_PCLK_EN();
 8000248:	4b55      	ldr	r3, [pc, #340]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800024a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024c:	4a54      	ldr	r2, [pc, #336]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800024e:	f043 0308 	orr.w	r3, r3, #8
 8000252:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000254:	e09b      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOE)
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	4a55      	ldr	r2, [pc, #340]	; (80003b0 <GPIO_PCLK_Control+0x1c4>)
 800025a:	4293      	cmp	r3, r2
 800025c:	d106      	bne.n	800026c <GPIO_PCLK_Control+0x80>
			GPIOE_PCLK_EN();
 800025e:	4b50      	ldr	r3, [pc, #320]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000260:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000262:	4a4f      	ldr	r2, [pc, #316]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000264:	f043 0310 	orr.w	r3, r3, #16
 8000268:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026a:	e090      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOF)
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	4a51      	ldr	r2, [pc, #324]	; (80003b4 <GPIO_PCLK_Control+0x1c8>)
 8000270:	4293      	cmp	r3, r2
 8000272:	d106      	bne.n	8000282 <GPIO_PCLK_Control+0x96>
			GPIOF_PCLK_EN();
 8000274:	4b4a      	ldr	r3, [pc, #296]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000276:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000278:	4a49      	ldr	r2, [pc, #292]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800027a:	f043 0320 	orr.w	r3, r3, #32
 800027e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000280:	e085      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOG)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a4c      	ldr	r2, [pc, #304]	; (80003b8 <GPIO_PCLK_Control+0x1cc>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d106      	bne.n	8000298 <GPIO_PCLK_Control+0xac>
			GPIOG_PCLK_EN();
 800028a:	4b45      	ldr	r3, [pc, #276]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800028c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028e:	4a44      	ldr	r2, [pc, #272]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000290:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000294:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000296:	e07a      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOH)
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a48      	ldr	r2, [pc, #288]	; (80003bc <GPIO_PCLK_Control+0x1d0>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d106      	bne.n	80002ae <GPIO_PCLK_Control+0xc2>
			GPIOH_PCLK_EN();
 80002a0:	4b3f      	ldr	r3, [pc, #252]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	4a3e      	ldr	r2, [pc, #248]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ac:	e06f      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOI)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	4a43      	ldr	r2, [pc, #268]	; (80003c0 <GPIO_PCLK_Control+0x1d4>)
 80002b2:	4293      	cmp	r3, r2
 80002b4:	d16b      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
			GPIOI_PCLK_EN();
 80002b6:	4b3a      	ldr	r3, [pc, #232]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ba:	4a39      	ldr	r2, [pc, #228]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c2:	e064      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
	else if(EnorDi == DISABLE)
 80002c4:	78fb      	ldrb	r3, [r7, #3]
 80002c6:	2b00      	cmp	r3, #0
 80002c8:	d161      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
		if(pGPIOx == GPIOA)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a33      	ldr	r2, [pc, #204]	; (800039c <GPIO_PCLK_Control+0x1b0>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PCLK_Control+0xf4>
			GPIOA_PCLK_DI();
 80002d2:	4b33      	ldr	r3, [pc, #204]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a32      	ldr	r2, [pc, #200]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002d8:	f023 0301 	bic.w	r3, r3, #1
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002de:	e056      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOB)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a30      	ldr	r2, [pc, #192]	; (80003a4 <GPIO_PCLK_Control+0x1b8>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PCLK_Control+0x10a>
			GPIOB_PCLK_DI();
 80002e8:	4b2d      	ldr	r3, [pc, #180]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a2c      	ldr	r2, [pc, #176]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 80002ee:	f023 0302 	bic.w	r3, r3, #2
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f4:	e04b      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOC)
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a2b      	ldr	r2, [pc, #172]	; (80003a8 <GPIO_PCLK_Control+0x1bc>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PCLK_Control+0x120>
			GPIOC_PCLK_DI();
 80002fe:	4b28      	ldr	r3, [pc, #160]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a27      	ldr	r2, [pc, #156]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000304:	f023 0304 	bic.w	r3, r3, #4
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e040      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOD)
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a27      	ldr	r2, [pc, #156]	; (80003ac <GPIO_PCLK_Control+0x1c0>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PCLK_Control+0x136>
			GPIOD_PCLK_DI();
 8000314:	4b22      	ldr	r3, [pc, #136]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a21      	ldr	r2, [pc, #132]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800031a:	f023 0308 	bic.w	r3, r3, #8
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e035      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOE)
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a22      	ldr	r2, [pc, #136]	; (80003b0 <GPIO_PCLK_Control+0x1c4>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PCLK_Control+0x14c>
			GPIOE_PCLK_DI();
 800032a:	4b1d      	ldr	r3, [pc, #116]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a1c      	ldr	r2, [pc, #112]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000330:	f023 0310 	bic.w	r3, r3, #16
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e02a      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOF)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a1e      	ldr	r2, [pc, #120]	; (80003b4 <GPIO_PCLK_Control+0x1c8>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_PCLK_Control+0x162>
			GPIOF_PCLK_DI();
 8000340:	4b17      	ldr	r3, [pc, #92]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a16      	ldr	r2, [pc, #88]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000346:	f023 0320 	bic.w	r3, r3, #32
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e01f      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOG)
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a19      	ldr	r2, [pc, #100]	; (80003b8 <GPIO_PCLK_Control+0x1cc>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_PCLK_Control+0x178>
			GPIOG_PCLK_DI();
 8000356:	4b12      	ldr	r3, [pc, #72]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a11      	ldr	r2, [pc, #68]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800035c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e014      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOH)
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a15      	ldr	r2, [pc, #84]	; (80003bc <GPIO_PCLK_Control+0x1d0>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <GPIO_PCLK_Control+0x18e>
			GPIOH_PCLK_DI();
 800036c:	4b0c      	ldr	r3, [pc, #48]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a0b      	ldr	r2, [pc, #44]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000372:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e009      	b.n	800038e <GPIO_PCLK_Control+0x1a2>
		else if(pGPIOx == GPIOI)
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a10      	ldr	r2, [pc, #64]	; (80003c0 <GPIO_PCLK_Control+0x1d4>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d105      	bne.n	800038e <GPIO_PCLK_Control+0x1a2>
				GPIOI_PCLK_DI();
 8000382:	4b07      	ldr	r3, [pc, #28]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a06      	ldr	r2, [pc, #24]	; (80003a0 <GPIO_PCLK_Control+0x1b4>)
 8000388:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	bf00      	nop
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr
 800039a:	bf00      	nop
 800039c:	40020000 	.word	0x40020000
 80003a0:	40023800 	.word	0x40023800
 80003a4:	40020400 	.word	0x40020400
 80003a8:	40020800 	.word	0x40020800
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	40021000 	.word	0x40021000
 80003b4:	40021400 	.word	0x40021400
 80003b8:	40021800 	.word	0x40021800
 80003bc:	40021c00 	.word	0x40021c00
 80003c0:	40022000 	.word	0x40022000

080003c4 <GPIO_Init>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003c4:	b480      	push	{r7}
 80003c6:	b087      	sub	sp, #28
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
	//1. GPIO Mode configuration

	uint32_t temp = 0;
 80003cc:	2300      	movs	r3, #0
 80003ce:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	d81f      	bhi.n	8000418 <GPIO_Init+0x54>
	{
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << ( 2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	461a      	mov	r2, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	791b      	ldrb	r3, [r3, #4]
 80003e2:	005b      	lsls	r3, r3, #1
 80003e4:	fa02 f303 	lsl.w	r3, r2, r3
 80003e8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	791b      	ldrb	r3, [r3, #4]
 80003f4:	4619      	mov	r1, r3
 80003f6:	2303      	movs	r3, #3
 80003f8:	408b      	lsls	r3, r1
 80003fa:	43db      	mvns	r3, r3
 80003fc:	4619      	mov	r1, r3
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	400a      	ands	r2, r1
 8000404:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	6819      	ldr	r1, [r3, #0]
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	697a      	ldr	r2, [r7, #20]
 8000412:	430a      	orrs	r2, r1
 8000414:	601a      	str	r2, [r3, #0]
 8000416:	e0ca      	b.n	80005ae <GPIO_Init+0x1ea>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_FT )
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	795b      	ldrb	r3, [r3, #5]
 800041c:	2b04      	cmp	r3, #4
 800041e:	d117      	bne.n	8000450 <GPIO_Init+0x8c>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000420:	4b4a      	ldr	r3, [pc, #296]	; (800054c <GPIO_Init+0x188>)
 8000422:	68db      	ldr	r3, [r3, #12]
 8000424:	687a      	ldr	r2, [r7, #4]
 8000426:	7912      	ldrb	r2, [r2, #4]
 8000428:	4611      	mov	r1, r2
 800042a:	2201      	movs	r2, #1
 800042c:	408a      	lsls	r2, r1
 800042e:	4611      	mov	r1, r2
 8000430:	4a46      	ldr	r2, [pc, #280]	; (800054c <GPIO_Init+0x188>)
 8000432:	430b      	orrs	r3, r1
 8000434:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000436:	4b45      	ldr	r3, [pc, #276]	; (800054c <GPIO_Init+0x188>)
 8000438:	689b      	ldr	r3, [r3, #8]
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	7912      	ldrb	r2, [r2, #4]
 800043e:	4611      	mov	r1, r2
 8000440:	2201      	movs	r2, #1
 8000442:	408a      	lsls	r2, r1
 8000444:	43d2      	mvns	r2, r2
 8000446:	4611      	mov	r1, r2
 8000448:	4a40      	ldr	r2, [pc, #256]	; (800054c <GPIO_Init+0x188>)
 800044a:	400b      	ands	r3, r1
 800044c:	6093      	str	r3, [r2, #8]
 800044e:	e035      	b.n	80004bc <GPIO_Init+0xf8>

		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IN_RT )
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	795b      	ldrb	r3, [r3, #5]
 8000454:	2b05      	cmp	r3, #5
 8000456:	d117      	bne.n	8000488 <GPIO_Init+0xc4>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000458:	4b3c      	ldr	r3, [pc, #240]	; (800054c <GPIO_Init+0x188>)
 800045a:	689b      	ldr	r3, [r3, #8]
 800045c:	687a      	ldr	r2, [r7, #4]
 800045e:	7912      	ldrb	r2, [r2, #4]
 8000460:	4611      	mov	r1, r2
 8000462:	2201      	movs	r2, #1
 8000464:	408a      	lsls	r2, r1
 8000466:	4611      	mov	r1, r2
 8000468:	4a38      	ldr	r2, [pc, #224]	; (800054c <GPIO_Init+0x188>)
 800046a:	430b      	orrs	r3, r1
 800046c:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800046e:	4b37      	ldr	r3, [pc, #220]	; (800054c <GPIO_Init+0x188>)
 8000470:	68db      	ldr	r3, [r3, #12]
 8000472:	687a      	ldr	r2, [r7, #4]
 8000474:	7912      	ldrb	r2, [r2, #4]
 8000476:	4611      	mov	r1, r2
 8000478:	2201      	movs	r2, #1
 800047a:	408a      	lsls	r2, r1
 800047c:	43d2      	mvns	r2, r2
 800047e:	4611      	mov	r1, r2
 8000480:	4a32      	ldr	r2, [pc, #200]	; (800054c <GPIO_Init+0x188>)
 8000482:	400b      	ands	r3, r1
 8000484:	60d3      	str	r3, [r2, #12]
 8000486:	e019      	b.n	80004bc <GPIO_Init+0xf8>

		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IN_RFT )
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	795b      	ldrb	r3, [r3, #5]
 800048c:	2b06      	cmp	r3, #6
 800048e:	d115      	bne.n	80004bc <GPIO_Init+0xf8>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000490:	4b2e      	ldr	r3, [pc, #184]	; (800054c <GPIO_Init+0x188>)
 8000492:	689b      	ldr	r3, [r3, #8]
 8000494:	687a      	ldr	r2, [r7, #4]
 8000496:	7912      	ldrb	r2, [r2, #4]
 8000498:	4611      	mov	r1, r2
 800049a:	2201      	movs	r2, #1
 800049c:	408a      	lsls	r2, r1
 800049e:	4611      	mov	r1, r2
 80004a0:	4a2a      	ldr	r2, [pc, #168]	; (800054c <GPIO_Init+0x188>)
 80004a2:	430b      	orrs	r3, r1
 80004a4:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a6:	4b29      	ldr	r3, [pc, #164]	; (800054c <GPIO_Init+0x188>)
 80004a8:	68db      	ldr	r3, [r3, #12]
 80004aa:	687a      	ldr	r2, [r7, #4]
 80004ac:	7912      	ldrb	r2, [r2, #4]
 80004ae:	4611      	mov	r1, r2
 80004b0:	2201      	movs	r2, #1
 80004b2:	408a      	lsls	r2, r1
 80004b4:	4611      	mov	r1, r2
 80004b6:	4a25      	ldr	r2, [pc, #148]	; (800054c <GPIO_Init+0x188>)
 80004b8:	430b      	orrs	r3, r1
 80004ba:	60d3      	str	r3, [r2, #12]
		}

	//2. configure the GPIO port selection in SYSCFG_EXTICR
	uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	089b      	lsrs	r3, r3, #2
 80004c2:	74fb      	strb	r3, [r7, #19]
	uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	791b      	ldrb	r3, [r3, #4]
 80004c8:	f003 0303 	and.w	r3, r3, #3
 80004cc:	74bb      	strb	r3, [r7, #18]
	uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	4a1f      	ldr	r2, [pc, #124]	; (8000550 <GPIO_Init+0x18c>)
 80004d4:	4293      	cmp	r3, r2
 80004d6:	d04d      	beq.n	8000574 <GPIO_Init+0x1b0>
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a1d      	ldr	r2, [pc, #116]	; (8000554 <GPIO_Init+0x190>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d032      	beq.n	8000548 <GPIO_Init+0x184>
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	4a1c      	ldr	r2, [pc, #112]	; (8000558 <GPIO_Init+0x194>)
 80004e8:	4293      	cmp	r3, r2
 80004ea:	d02b      	beq.n	8000544 <GPIO_Init+0x180>
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a1a      	ldr	r2, [pc, #104]	; (800055c <GPIO_Init+0x198>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d024      	beq.n	8000540 <GPIO_Init+0x17c>
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a19      	ldr	r2, [pc, #100]	; (8000560 <GPIO_Init+0x19c>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d01d      	beq.n	800053c <GPIO_Init+0x178>
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a17      	ldr	r2, [pc, #92]	; (8000564 <GPIO_Init+0x1a0>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d016      	beq.n	8000538 <GPIO_Init+0x174>
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a16      	ldr	r2, [pc, #88]	; (8000568 <GPIO_Init+0x1a4>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d00f      	beq.n	8000534 <GPIO_Init+0x170>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a14      	ldr	r2, [pc, #80]	; (800056c <GPIO_Init+0x1a8>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d008      	beq.n	8000530 <GPIO_Init+0x16c>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a13      	ldr	r2, [pc, #76]	; (8000570 <GPIO_Init+0x1ac>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d101      	bne.n	800052c <GPIO_Init+0x168>
 8000528:	2308      	movs	r3, #8
 800052a:	e024      	b.n	8000576 <GPIO_Init+0x1b2>
 800052c:	2300      	movs	r3, #0
 800052e:	e022      	b.n	8000576 <GPIO_Init+0x1b2>
 8000530:	2307      	movs	r3, #7
 8000532:	e020      	b.n	8000576 <GPIO_Init+0x1b2>
 8000534:	2306      	movs	r3, #6
 8000536:	e01e      	b.n	8000576 <GPIO_Init+0x1b2>
 8000538:	2305      	movs	r3, #5
 800053a:	e01c      	b.n	8000576 <GPIO_Init+0x1b2>
 800053c:	2304      	movs	r3, #4
 800053e:	e01a      	b.n	8000576 <GPIO_Init+0x1b2>
 8000540:	2303      	movs	r3, #3
 8000542:	e018      	b.n	8000576 <GPIO_Init+0x1b2>
 8000544:	2302      	movs	r3, #2
 8000546:	e016      	b.n	8000576 <GPIO_Init+0x1b2>
 8000548:	2301      	movs	r3, #1
 800054a:	e014      	b.n	8000576 <GPIO_Init+0x1b2>
 800054c:	40013c00 	.word	0x40013c00
 8000550:	40020000 	.word	0x40020000
 8000554:	40020400 	.word	0x40020400
 8000558:	40020800 	.word	0x40020800
 800055c:	40020c00 	.word	0x40020c00
 8000560:	40021000 	.word	0x40021000
 8000564:	40021400 	.word	0x40021400
 8000568:	40021800 	.word	0x40021800
 800056c:	40021c00 	.word	0x40021c00
 8000570:	40022000 	.word	0x40022000
 8000574:	2300      	movs	r3, #0
 8000576:	747b      	strb	r3, [r7, #17]
	SYSCFG_PCLK_EN();
 8000578:	4b5d      	ldr	r3, [pc, #372]	; (80006f0 <GPIO_Init+0x32c>)
 800057a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800057c:	4a5c      	ldr	r2, [pc, #368]	; (80006f0 <GPIO_Init+0x32c>)
 800057e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000582:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 8000584:	7c7a      	ldrb	r2, [r7, #17]
 8000586:	7cbb      	ldrb	r3, [r7, #18]
 8000588:	009b      	lsls	r3, r3, #2
 800058a:	fa02 f103 	lsl.w	r1, r2, r3
 800058e:	4a59      	ldr	r2, [pc, #356]	; (80006f4 <GPIO_Init+0x330>)
 8000590:	7cfb      	ldrb	r3, [r7, #19]
 8000592:	3302      	adds	r3, #2
 8000594:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

	//3 . enable the exti interrupt delivery using IMR
	EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000598:	4b57      	ldr	r3, [pc, #348]	; (80006f8 <GPIO_Init+0x334>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	687a      	ldr	r2, [r7, #4]
 800059e:	7912      	ldrb	r2, [r2, #4]
 80005a0:	4611      	mov	r1, r2
 80005a2:	2201      	movs	r2, #1
 80005a4:	408a      	lsls	r2, r1
 80005a6:	4611      	mov	r1, r2
 80005a8:	4a53      	ldr	r2, [pc, #332]	; (80006f8 <GPIO_Init+0x334>)
 80005aa:	430b      	orrs	r3, r1
 80005ac:	6013      	str	r3, [r2, #0]
	}

	//2 . GPIO Speed Configuration

	temp = 0;
 80005ae:	2300      	movs	r3, #0
 80005b0:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	799b      	ldrb	r3, [r3, #6]
 80005b6:	461a      	mov	r2, r3
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	791b      	ldrb	r3, [r3, #4]
 80005bc:	005b      	lsls	r3, r3, #1
 80005be:	fa02 f303 	lsl.w	r3, r2, r3
 80005c2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	689a      	ldr	r2, [r3, #8]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	791b      	ldrb	r3, [r3, #4]
 80005ce:	4619      	mov	r1, r3
 80005d0:	2303      	movs	r3, #3
 80005d2:	408b      	lsls	r3, r1
 80005d4:	43db      	mvns	r3, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	400a      	ands	r2, r1
 80005de:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6899      	ldr	r1, [r3, #8]
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	697a      	ldr	r2, [r7, #20]
 80005ec:	430a      	orrs	r2, r1
 80005ee:	609a      	str	r2, [r3, #8]



	//3. GPIO PullUp and PullDown configuration

	temp = 0;
 80005f0:	2300      	movs	r3, #0
 80005f2:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	79db      	ldrb	r3, [r3, #7]
 80005f8:	461a      	mov	r2, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	791b      	ldrb	r3, [r3, #4]
 80005fe:	005b      	lsls	r3, r3, #1
 8000600:	fa02 f303 	lsl.w	r3, r2, r3
 8000604:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	68da      	ldr	r2, [r3, #12]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	791b      	ldrb	r3, [r3, #4]
 8000610:	4619      	mov	r1, r3
 8000612:	2303      	movs	r3, #3
 8000614:	408b      	lsls	r3, r1
 8000616:	43db      	mvns	r3, r3
 8000618:	4619      	mov	r1, r3
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	400a      	ands	r2, r1
 8000620:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	68d9      	ldr	r1, [r3, #12]
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	697a      	ldr	r2, [r7, #20]
 800062e:	430a      	orrs	r2, r1
 8000630:	60da      	str	r2, [r3, #12]

	//4. GPIO Output Type configuration

	temp = 0;
 8000632:	2300      	movs	r3, #0
 8000634:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	7a1b      	ldrb	r3, [r3, #8]
 800063a:	461a      	mov	r2, r3
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	791b      	ldrb	r3, [r3, #4]
 8000640:	005b      	lsls	r3, r3, #1
 8000642:	fa02 f303 	lsl.w	r3, r2, r3
 8000646:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	685a      	ldr	r2, [r3, #4]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	791b      	ldrb	r3, [r3, #4]
 8000652:	4619      	mov	r1, r3
 8000654:	2301      	movs	r3, #1
 8000656:	408b      	lsls	r3, r1
 8000658:	43db      	mvns	r3, r3
 800065a:	4619      	mov	r1, r3
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	400a      	ands	r2, r1
 8000662:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	6859      	ldr	r1, [r3, #4]
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	697a      	ldr	r2, [r7, #20]
 8000670:	430a      	orrs	r2, r1
 8000672:	605a      	str	r2, [r3, #4]

	//5. GPIO Alternate function configuration

	temp = 0;
 8000674:	2300      	movs	r3, #0
 8000676:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	795b      	ldrb	r3, [r3, #5]
 800067c:	2b02      	cmp	r3, #2
 800067e:	d131      	bne.n	80006e4 <GPIO_Init+0x320>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	791b      	ldrb	r3, [r3, #4]
 8000684:	08db      	lsrs	r3, r3, #3
 8000686:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	f003 0307 	and.w	r3, r3, #7
 8000690:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2 ));
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	7c3a      	ldrb	r2, [r7, #16]
 8000698:	3208      	adds	r2, #8
 800069a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800069e:	7bfb      	ldrb	r3, [r7, #15]
 80006a0:	009b      	lsls	r3, r3, #2
 80006a2:	220f      	movs	r2, #15
 80006a4:	fa02 f303 	lsl.w	r3, r2, r3
 80006a8:	43db      	mvns	r3, r3
 80006aa:	4618      	mov	r0, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	7c3a      	ldrb	r2, [r7, #16]
 80006b2:	4001      	ands	r1, r0
 80006b4:	3208      	adds	r2, #8
 80006b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2 ));
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	7c3a      	ldrb	r2, [r7, #16]
 80006c0:	3208      	adds	r2, #8
 80006c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	7a5b      	ldrb	r3, [r3, #9]
 80006ca:	461a      	mov	r2, r3
 80006cc:	7bfb      	ldrb	r3, [r7, #15]
 80006ce:	009b      	lsls	r3, r3, #2
 80006d0:	fa02 f303 	lsl.w	r3, r2, r3
 80006d4:	4618      	mov	r0, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	7c3a      	ldrb	r2, [r7, #16]
 80006dc:	4301      	orrs	r1, r0
 80006de:	3208      	adds	r2, #8
 80006e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80006e4:	bf00      	nop
 80006e6:	371c      	adds	r7, #28
 80006e8:	46bd      	mov	sp, r7
 80006ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ee:	4770      	bx	lr
 80006f0:	40023800 	.word	0x40023800
 80006f4:	40013800 	.word	0x40013800
 80006f8:	40013c00 	.word	0x40013c00

080006fc <GPIO_WriteToOutputPin>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80006fc:	b480      	push	{r7}
 80006fe:	b083      	sub	sp, #12
 8000700:	af00      	add	r7, sp, #0
 8000702:	6078      	str	r0, [r7, #4]
 8000704:	460b      	mov	r3, r1
 8000706:	70fb      	strb	r3, [r7, #3]
 8000708:	4613      	mov	r3, r2
 800070a:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET)
 800070c:	78bb      	ldrb	r3, [r7, #2]
 800070e:	2b01      	cmp	r3, #1
 8000710:	d109      	bne.n	8000726 <GPIO_WriteToOutputPin+0x2a>
	{
		pGPIOx->ODR |= ( 1 << PinNumber);
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	695b      	ldr	r3, [r3, #20]
 8000716:	78fa      	ldrb	r2, [r7, #3]
 8000718:	2101      	movs	r1, #1
 800071a:	fa01 f202 	lsl.w	r2, r1, r2
 800071e:	431a      	orrs	r2, r3
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	615a      	str	r2, [r3, #20]
	}
	else
	{
		pGPIOx->ODR &= ~( 1 << PinNumber);
	}
}
 8000724:	e009      	b.n	800073a <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~( 1 << PinNumber);
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	695b      	ldr	r3, [r3, #20]
 800072a:	78fa      	ldrb	r2, [r7, #3]
 800072c:	2101      	movs	r1, #1
 800072e:	fa01 f202 	lsl.w	r2, r1, r2
 8000732:	43d2      	mvns	r2, r2
 8000734:	401a      	ands	r2, r3
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	615a      	str	r2, [r3, #20]
}
 800073a:	bf00      	nop
 800073c:	370c      	adds	r7, #12
 800073e:	46bd      	mov	sp, r7
 8000740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000744:	4770      	bx	lr

08000746 <GPIO_ToggleOutputPin>:
 * 																									*
 * @Note			   -																			*
 ***************************************************************************************************/

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000746:	b480      	push	{r7}
 8000748:	b083      	sub	sp, #12
 800074a:	af00      	add	r7, sp, #0
 800074c:	6078      	str	r0, [r7, #4]
 800074e:	460b      	mov	r3, r1
 8000750:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber);
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	695b      	ldr	r3, [r3, #20]
 8000756:	78fa      	ldrb	r2, [r7, #3]
 8000758:	2101      	movs	r1, #1
 800075a:	fa01 f202 	lsl.w	r2, r1, r2
 800075e:	405a      	eors	r2, r3
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	615a      	str	r2, [r3, #20]
}
 8000764:	bf00      	nop
 8000766:	370c      	adds	r7, #12
 8000768:	46bd      	mov	sp, r7
 800076a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076e:	4770      	bx	lr

08000770 <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000770:	b480      	push	{r7}
 8000772:	b083      	sub	sp, #12
 8000774:	af00      	add	r7, sp, #0
 8000776:	4603      	mov	r3, r0
 8000778:	460a      	mov	r2, r1
 800077a:	71fb      	strb	r3, [r7, #7]
 800077c:	4613      	mov	r3, r2
 800077e:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 8000780:	79bb      	ldrb	r3, [r7, #6]
 8000782:	2b01      	cmp	r3, #1
 8000784:	d133      	bne.n	80007ee <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 8000786:	79fb      	ldrb	r3, [r7, #7]
 8000788:	2b1f      	cmp	r3, #31
 800078a:	d80a      	bhi.n	80007a2 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 800078c:	4b35      	ldr	r3, [pc, #212]	; (8000864 <GPIO_IRQInterruptConfig+0xf4>)
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	79fa      	ldrb	r2, [r7, #7]
 8000792:	2101      	movs	r1, #1
 8000794:	fa01 f202 	lsl.w	r2, r1, r2
 8000798:	4611      	mov	r1, r2
 800079a:	4a32      	ldr	r2, [pc, #200]	; (8000864 <GPIO_IRQInterruptConfig+0xf4>)
 800079c:	430b      	orrs	r3, r1
 800079e:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}

}
 80007a0:	e059      	b.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 80007a2:	79fb      	ldrb	r3, [r7, #7]
 80007a4:	2b1f      	cmp	r3, #31
 80007a6:	d90f      	bls.n	80007c8 <GPIO_IRQInterruptConfig+0x58>
 80007a8:	79fb      	ldrb	r3, [r7, #7]
 80007aa:	2b3f      	cmp	r3, #63	; 0x3f
 80007ac:	d80c      	bhi.n	80007c8 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 80007ae:	4b2e      	ldr	r3, [pc, #184]	; (8000868 <GPIO_IRQInterruptConfig+0xf8>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	79fa      	ldrb	r2, [r7, #7]
 80007b4:	f002 021f 	and.w	r2, r2, #31
 80007b8:	2101      	movs	r1, #1
 80007ba:	fa01 f202 	lsl.w	r2, r1, r2
 80007be:	4611      	mov	r1, r2
 80007c0:	4a29      	ldr	r2, [pc, #164]	; (8000868 <GPIO_IRQInterruptConfig+0xf8>)
 80007c2:	430b      	orrs	r3, r1
 80007c4:	6013      	str	r3, [r2, #0]
 80007c6:	e046      	b.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 80007c8:	79fb      	ldrb	r3, [r7, #7]
 80007ca:	2b3f      	cmp	r3, #63	; 0x3f
 80007cc:	d943      	bls.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
 80007ce:	79fb      	ldrb	r3, [r7, #7]
 80007d0:	2b5f      	cmp	r3, #95	; 0x5f
 80007d2:	d840      	bhi.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 80007d4:	4b25      	ldr	r3, [pc, #148]	; (800086c <GPIO_IRQInterruptConfig+0xfc>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	79fa      	ldrb	r2, [r7, #7]
 80007da:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007de:	2101      	movs	r1, #1
 80007e0:	fa01 f202 	lsl.w	r2, r1, r2
 80007e4:	4611      	mov	r1, r2
 80007e6:	4a21      	ldr	r2, [pc, #132]	; (800086c <GPIO_IRQInterruptConfig+0xfc>)
 80007e8:	430b      	orrs	r3, r1
 80007ea:	6013      	str	r3, [r2, #0]
}
 80007ec:	e033      	b.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 80007ee:	79fb      	ldrb	r3, [r7, #7]
 80007f0:	2b1f      	cmp	r3, #31
 80007f2:	d80a      	bhi.n	800080a <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 80007f4:	4b1e      	ldr	r3, [pc, #120]	; (8000870 <GPIO_IRQInterruptConfig+0x100>)
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	79fa      	ldrb	r2, [r7, #7]
 80007fa:	2101      	movs	r1, #1
 80007fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000800:	4611      	mov	r1, r2
 8000802:	4a1b      	ldr	r2, [pc, #108]	; (8000870 <GPIO_IRQInterruptConfig+0x100>)
 8000804:	430b      	orrs	r3, r1
 8000806:	6013      	str	r3, [r2, #0]
}
 8000808:	e025      	b.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 800080a:	79fb      	ldrb	r3, [r7, #7]
 800080c:	2b1f      	cmp	r3, #31
 800080e:	d90f      	bls.n	8000830 <GPIO_IRQInterruptConfig+0xc0>
 8000810:	79fb      	ldrb	r3, [r7, #7]
 8000812:	2b3f      	cmp	r3, #63	; 0x3f
 8000814:	d80c      	bhi.n	8000830 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 8000816:	4b17      	ldr	r3, [pc, #92]	; (8000874 <GPIO_IRQInterruptConfig+0x104>)
 8000818:	681b      	ldr	r3, [r3, #0]
 800081a:	79fa      	ldrb	r2, [r7, #7]
 800081c:	f002 021f 	and.w	r2, r2, #31
 8000820:	2101      	movs	r1, #1
 8000822:	fa01 f202 	lsl.w	r2, r1, r2
 8000826:	4611      	mov	r1, r2
 8000828:	4a12      	ldr	r2, [pc, #72]	; (8000874 <GPIO_IRQInterruptConfig+0x104>)
 800082a:	430b      	orrs	r3, r1
 800082c:	6013      	str	r3, [r2, #0]
 800082e:	e012      	b.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 8000830:	79fb      	ldrb	r3, [r7, #7]
 8000832:	2b3f      	cmp	r3, #63	; 0x3f
 8000834:	d90f      	bls.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
 8000836:	79fb      	ldrb	r3, [r7, #7]
 8000838:	2b5f      	cmp	r3, #95	; 0x5f
 800083a:	d80c      	bhi.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 800083c:	4b0e      	ldr	r3, [pc, #56]	; (8000878 <GPIO_IRQInterruptConfig+0x108>)
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	79fa      	ldrb	r2, [r7, #7]
 8000842:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000846:	2101      	movs	r1, #1
 8000848:	fa01 f202 	lsl.w	r2, r1, r2
 800084c:	4611      	mov	r1, r2
 800084e:	4a0a      	ldr	r2, [pc, #40]	; (8000878 <GPIO_IRQInterruptConfig+0x108>)
 8000850:	430b      	orrs	r3, r1
 8000852:	6013      	str	r3, [r2, #0]
}
 8000854:	e7ff      	b.n	8000856 <GPIO_IRQInterruptConfig+0xe6>
 8000856:	bf00      	nop
 8000858:	370c      	adds	r7, #12
 800085a:	46bd      	mov	sp, r7
 800085c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000860:	4770      	bx	lr
 8000862:	bf00      	nop
 8000864:	0e00e100 	.word	0x0e00e100
 8000868:	0e00e104 	.word	0x0e00e104
 800086c:	0e00e108 	.word	0x0e00e108
 8000870:	0e00e180 	.word	0x0e00e180
 8000874:	0e00e184 	.word	0x0e00e184
 8000878:	0e00e188 	.word	0x0e00e188

0800087c <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 800087c:	b480      	push	{r7}
 800087e:	b083      	sub	sp, #12
 8000880:	af00      	add	r7, sp, #0
 8000882:	4603      	mov	r3, r0
 8000884:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 8000886:	4b0c      	ldr	r3, [pc, #48]	; (80008b8 <GPIO_IRQHandling+0x3c>)
 8000888:	695b      	ldr	r3, [r3, #20]
 800088a:	79fa      	ldrb	r2, [r7, #7]
 800088c:	2101      	movs	r1, #1
 800088e:	fa01 f202 	lsl.w	r2, r1, r2
 8000892:	4013      	ands	r3, r2
 8000894:	2b00      	cmp	r3, #0
 8000896:	d009      	beq.n	80008ac <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 8000898:	4b07      	ldr	r3, [pc, #28]	; (80008b8 <GPIO_IRQHandling+0x3c>)
 800089a:	695b      	ldr	r3, [r3, #20]
 800089c:	79fa      	ldrb	r2, [r7, #7]
 800089e:	2101      	movs	r1, #1
 80008a0:	fa01 f202 	lsl.w	r2, r1, r2
 80008a4:	4611      	mov	r1, r2
 80008a6:	4a04      	ldr	r2, [pc, #16]	; (80008b8 <GPIO_IRQHandling+0x3c>)
 80008a8:	430b      	orrs	r3, r1
 80008aa:	6153      	str	r3, [r2, #20]
	}

}
 80008ac:	bf00      	nop
 80008ae:	370c      	adds	r7, #12
 80008b0:	46bd      	mov	sp, r7
 80008b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008b6:	4770      	bx	lr
 80008b8:	40013c00 	.word	0x40013c00

080008bc <delay>:
#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 80008bc:	b480      	push	{r7}
 80008be:	b083      	sub	sp, #12
 80008c0:	af00      	add	r7, sp, #0
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 80008c2:	2300      	movs	r3, #0
 80008c4:	607b      	str	r3, [r7, #4]
 80008c6:	e002      	b.n	80008ce <delay+0x12>
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	3301      	adds	r3, #1
 80008cc:	607b      	str	r3, [r7, #4]
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	4a04      	ldr	r2, [pc, #16]	; (80008e4 <delay+0x28>)
 80008d2:	4293      	cmp	r3, r2
 80008d4:	d9f8      	bls.n	80008c8 <delay+0xc>
}
 80008d6:	bf00      	nop
 80008d8:	370c      	adds	r7, #12
 80008da:	46bd      	mov	sp, r7
 80008dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e0:	4770      	bx	lr
 80008e2:	bf00      	nop
 80008e4:	0003d08f 	.word	0x0003d08f

080008e8 <main>:

int main(void)
{
 80008e8:	b580      	push	{r7, lr}
 80008ea:	b086      	sub	sp, #24
 80008ec:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 80008ee:	f107 030c 	add.w	r3, r7, #12
 80008f2:	220c      	movs	r2, #12
 80008f4:	2100      	movs	r1, #0
 80008f6:	4618      	mov	r0, r3
 80008f8:	f000 f89a 	bl	8000a30 <memset>
	memset(&GPIOBtn,0,sizeof(GpioLed));
 80008fc:	463b      	mov	r3, r7
 80008fe:	220c      	movs	r2, #12
 8000900:	2100      	movs	r1, #0
 8000902:	4618      	mov	r0, r3
 8000904:	f000 f894 	bl	8000a30 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOG;
 8000908:	4b18      	ldr	r3, [pc, #96]	; (800096c <main+0x84>)
 800090a:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 800090c:	230d      	movs	r3, #13
 800090e:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 8000910:	2301      	movs	r3, #1
 8000912:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000914:	2300      	movs	r3, #0
 8000916:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OUT_TYPE_PP;
 8000918:	2300      	movs	r3, #0
 800091a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800091c:	2300      	movs	r3, #0
 800091e:	74fb      	strb	r3, [r7, #19]

	GPIO_PCLK_Control(GPIOG,ENABLE);
 8000920:	2101      	movs	r1, #1
 8000922:	4812      	ldr	r0, [pc, #72]	; (800096c <main+0x84>)
 8000924:	f7ff fc62 	bl	80001ec <GPIO_PCLK_Control>

	GPIO_Init(&GpioLed);
 8000928:	f107 030c 	add.w	r3, r7, #12
 800092c:	4618      	mov	r0, r3
 800092e:	f7ff fd49 	bl	80003c4 <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
 8000932:	4b0f      	ldr	r3, [pc, #60]	; (8000970 <main+0x88>)
 8000934:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000936:	2300      	movs	r3, #0
 8000938:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN_RT;
 800093a:	2305      	movs	r3, #5
 800093c:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800093e:	2302      	movs	r3, #2
 8000940:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD;
 8000942:	2302      	movs	r3, #2
 8000944:	71fb      	strb	r3, [r7, #7]

	GPIO_PCLK_Control(GPIOA,ENABLE);
 8000946:	2101      	movs	r1, #1
 8000948:	4809      	ldr	r0, [pc, #36]	; (8000970 <main+0x88>)
 800094a:	f7ff fc4f 	bl	80001ec <GPIO_PCLK_Control>

	GPIO_Init(&GPIOBtn);
 800094e:	463b      	mov	r3, r7
 8000950:	4618      	mov	r0, r3
 8000952:	f7ff fd37 	bl	80003c4 <GPIO_Init>

	GPIO_WriteToOutputPin(GPIOG, GPIO_PIN_NO_13, GPIO_PIN_RESET);
 8000956:	2200      	movs	r2, #0
 8000958:	210d      	movs	r1, #13
 800095a:	4804      	ldr	r0, [pc, #16]	; (800096c <main+0x84>)
 800095c:	f7ff fece 	bl	80006fc <GPIO_WriteToOutputPin>
	//IRQ configurations
	//GPIO_IRQPriorityConfig(IRQ_NO_EXTI0,NVIC_IRQ_PRI15);
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 8000960:	2101      	movs	r1, #1
 8000962:	2006      	movs	r0, #6
 8000964:	f7ff ff04 	bl	8000770 <GPIO_IRQInterruptConfig>

    while(1);
 8000968:	e7fe      	b.n	8000968 <main+0x80>
 800096a:	bf00      	nop
 800096c:	40021800 	.word	0x40021800
 8000970:	40020000 	.word	0x40020000

08000974 <EXTI9_5_IRQHandler>:

}


void EXTI9_5_IRQHandler(void)
{
 8000974:	b580      	push	{r7, lr}
 8000976:	af00      	add	r7, sp, #0
   delay(); //200ms . wait till button de-bouncing gets over
 8000978:	f7ff ffa0 	bl	80008bc <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0); //clear the pending event from exti line
 800097c:	2000      	movs	r0, #0
 800097e:	f7ff ff7d 	bl	800087c <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOG,GPIO_PIN_NO_13);
 8000982:	210d      	movs	r1, #13
 8000984:	4802      	ldr	r0, [pc, #8]	; (8000990 <EXTI9_5_IRQHandler+0x1c>)
 8000986:	f7ff fede 	bl	8000746 <GPIO_ToggleOutputPin>
}
 800098a:	bf00      	nop
 800098c:	bd80      	pop	{r7, pc}
 800098e:	bf00      	nop
 8000990:	40021800 	.word	0x40021800

08000994 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000994:	480d      	ldr	r0, [pc, #52]	; (80009cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000996:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000998:	480d      	ldr	r0, [pc, #52]	; (80009d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800099a:	490e      	ldr	r1, [pc, #56]	; (80009d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800099c:	4a0e      	ldr	r2, [pc, #56]	; (80009d8 <LoopForever+0xe>)
  movs r3, #0
 800099e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009a0:	e002      	b.n	80009a8 <LoopCopyDataInit>

080009a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009a6:	3304      	adds	r3, #4

080009a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009ac:	d3f9      	bcc.n	80009a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009ae:	4a0b      	ldr	r2, [pc, #44]	; (80009dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80009b0:	4c0b      	ldr	r4, [pc, #44]	; (80009e0 <LoopForever+0x16>)
  movs r3, #0
 80009b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009b4:	e001      	b.n	80009ba <LoopFillZerobss>

080009b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009b8:	3204      	adds	r2, #4

080009ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009bc:	d3fb      	bcc.n	80009b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80009be:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80009c2:	f000 f811 	bl	80009e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009c6:	f7ff ff8f 	bl	80008e8 <main>

080009ca <LoopForever>:

LoopForever:
    b LoopForever
 80009ca:	e7fe      	b.n	80009ca <LoopForever>
  ldr   r0, =_estack
 80009cc:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80009d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009d4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80009d8:	08000a60 	.word	0x08000a60
  ldr r2, =_sbss
 80009dc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80009e0:	2000001c 	.word	0x2000001c

080009e4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009e4:	e7fe      	b.n	80009e4 <ADC_IRQHandler>
	...

080009e8 <__libc_init_array>:
 80009e8:	b570      	push	{r4, r5, r6, lr}
 80009ea:	4e0d      	ldr	r6, [pc, #52]	; (8000a20 <__libc_init_array+0x38>)
 80009ec:	4c0d      	ldr	r4, [pc, #52]	; (8000a24 <__libc_init_array+0x3c>)
 80009ee:	1ba4      	subs	r4, r4, r6
 80009f0:	10a4      	asrs	r4, r4, #2
 80009f2:	2500      	movs	r5, #0
 80009f4:	42a5      	cmp	r5, r4
 80009f6:	d109      	bne.n	8000a0c <__libc_init_array+0x24>
 80009f8:	4e0b      	ldr	r6, [pc, #44]	; (8000a28 <__libc_init_array+0x40>)
 80009fa:	4c0c      	ldr	r4, [pc, #48]	; (8000a2c <__libc_init_array+0x44>)
 80009fc:	f000 f820 	bl	8000a40 <_init>
 8000a00:	1ba4      	subs	r4, r4, r6
 8000a02:	10a4      	asrs	r4, r4, #2
 8000a04:	2500      	movs	r5, #0
 8000a06:	42a5      	cmp	r5, r4
 8000a08:	d105      	bne.n	8000a16 <__libc_init_array+0x2e>
 8000a0a:	bd70      	pop	{r4, r5, r6, pc}
 8000a0c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a10:	4798      	blx	r3
 8000a12:	3501      	adds	r5, #1
 8000a14:	e7ee      	b.n	80009f4 <__libc_init_array+0xc>
 8000a16:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a1a:	4798      	blx	r3
 8000a1c:	3501      	adds	r5, #1
 8000a1e:	e7f2      	b.n	8000a06 <__libc_init_array+0x1e>
 8000a20:	08000a58 	.word	0x08000a58
 8000a24:	08000a58 	.word	0x08000a58
 8000a28:	08000a58 	.word	0x08000a58
 8000a2c:	08000a5c 	.word	0x08000a5c

08000a30 <memset>:
 8000a30:	4402      	add	r2, r0
 8000a32:	4603      	mov	r3, r0
 8000a34:	4293      	cmp	r3, r2
 8000a36:	d100      	bne.n	8000a3a <memset+0xa>
 8000a38:	4770      	bx	lr
 8000a3a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a3e:	e7f9      	b.n	8000a34 <memset+0x4>

08000a40 <_init>:
 8000a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a42:	bf00      	nop
 8000a44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a46:	bc08      	pop	{r3}
 8000a48:	469e      	mov	lr, r3
 8000a4a:	4770      	bx	lr

08000a4c <_fini>:
 8000a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a4e:	bf00      	nop
 8000a50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a52:	bc08      	pop	{r3}
 8000a54:	469e      	mov	lr, r3
 8000a56:	4770      	bx	lr
